{"version":3,"sources":["webpack:///webpack/bootstrap 640e12280d01b4779336","webpack:///./lib/index.js","webpack:///./lib/provider.js","webpack:///./lib/posts/posts.module.js","webpack:///./lib/posts/posts.service.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;;;;;uCCtCqB,sBAAe;;;;+CAElB,gCAAyB;;;;AAE3C,KAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,kBAAkB,EAAE,iCAE5C,CAAC,CAAC;;AAEH,IAAG,CAAC,QAAQ,CAAC,OAAO,0BAAW,CAAC;;sBAEjB,GAAG,GAAG,GAAG,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;sBCJd,YAAW;AACtB,eAAU,CAAC;AACX,SAAI,OAAO,aAAC;AACZ,SAAM,SAAS,GAAG,QAAQ,CAAC;;AAE3B,YAAO;AACH,aAAI,EAAJ,IAAI;AACJ,mBAAU,EAAV,UAAU;MACb,CAAC;;AAEF,cAAS,UAAU,CAAC,UAAU,EAAE;AAC5B,mBAAU,GAAG,kBAAkB,CAAC,UAAU,CAAC,CAAC;AAC5C,gBAAO,GAAG,UAAU,GAAG,SAAS,CAAC;MACpC;;AAED,cAAS,IAAI,GAAG;AACZ,gBAAO;AACH,uBAAU,EAAV,UAAU;UACb,CAAC;;AAEF,kBAAS,UAAU,GAAG;AAClB,oBAAO,OAAO,CAAC;UAClB;MACJ;;AAED,cAAS,kBAAkB,CAAC,GAAG,EAAE;AAC7B,gBAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;MACjC;EACJ;;AAAA,EAAC;;;;;;;;;;;;;;;;;;2CClCkB,2BAAoB;;;;AAExC,KAAI,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,uBAAuB,EAAE,EAAE,CAAC,CAAC;;AAEtD,IAAG,CAAC,OAAO,CAAC,aAAa,8BAAU,CAAC;;sBAErB,GAAG,GAAG,GAAG,CAAC,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACId,uBAAC,KAAK,EAAE,KAAK,EAAE;AACtB,mBAAU,CAAC;;;;AAEX,aAAI,CAAC,OAAO,GAAG,KAAK,CAAC,UAAU,EAAE,CAAC;AAClC,aAAI,CAAC,KAAK,GAAG,KAAK,CAAC;MACtB;;;;;;;;;;;;;;;;;;;;;;;;;gBAsBO,SAAuC;iBAAtC,MAAM,cAAK;iBAAE,IAAI,yDAAG,EAAE;iBAAE,OAAO,yDAAG,EAAE;;AACM;AAC3C,uBAAM,EAAN,MAAM;AACN,qBAAI,EAAJ,IAAI;AACJ,wBAAO,EAAP,EAAO;cACV,CAAC,CAAC;UACN","file":"wp-api-angularjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 640e12280d01b4779336\n **/","import Provider from './provider.js';\n\nimport Posts from './posts/posts.module.js';\n\nlet mod = angular.module('wp-api-angularjs', [\n    Posts\n]);\n\nmod.provider('WpApi', Provider);\n\nexport default mod = mod.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/index.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs\n * @description\n * wp-api-angularjs provider\n */\nexport default function() {\n    'ngInject';\n    let baseUrl;\n    const namespace = '/wp/v2';\n\n    return {\n        $get,\n        setBaseUrl\n    };\n\n    function setBaseUrl(newBaseUrl) {\n        newBaseUrl = stripTrailingSlash(newBaseUrl);\n        baseUrl = newBaseUrl + namespace;\n    }\n\n    function $get() {\n        return {\n            getBaseUrl\n        };\n\n        function getBaseUrl() {\n            return baseUrl;\n        }\n    }\n\n    function stripTrailingSlash(str) {\n        return str.replace(/\\/$/, \"\");\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/provider.js\n **/","import Service from './posts.service.js';\n\nlet mod = angular.module('wp-api-angularjs.post', []);\n\nmod.service('$wpApiPosts', Service);\n\nexport default mod = mod.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/posts/posts.module.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.post\n * @description\n * Posts entity\n * @requires  wp-api-angularjs:WpApi\n * @requires  $http\n */\n\nexport default class {\n    constructor(WpApi, $http) {\n        'ngInject';\n\n        this.baseUrl = WpApi.getBaseUrl();\n        this.$http = $http;\n    }\n\n    /**\n     * @ngdoc function\n     * @name getPosts\n     * @access public\n     * @methodOf wp-api-angularjs.post:getPosts\n     *\n     * @description\n     * Get post list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be serialized with the paramSerializer and appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers to send to the server. If the return value of a function is null, the header will not be sent. Functions accept a config object as an argument.\n     * @example\n     * $wpApiPosts.getPosts({\n     *  page: 1,\n     *  per_page: 10,\n     *  \"filter[orderby]\": \"date\"\n     *  \"filter[orderby]\": \"asc\"\n     * });\n     * @returns {Object} Promise\n     */\n    getPosts(params = {}, data = {}, headers = {}) {\n        return this.$http.get(this.baseUrl + '/posts', {\n            params,\n            data,\n            headers\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/posts/posts.service.js\n **/"],"sourceRoot":""}