{"version":3,"sources":["webpack:///webpack/bootstrap 5af69cbfd710aa925cb7","webpack:///./lib/index.js","webpack:///./lib/statuses.service.js","webpack:///./lib/parent.service.js","webpack:///./lib/provider.js","webpack:///./~/js-base64/base64.js","webpack:///./lib/posts.service.js","webpack:///./lib/pages.service.js","webpack:///./lib/media.service.js","webpack:///./lib/types.service.js","webpack:///./lib/taxonomies.service.js","webpack:///./lib/terms.service.js","webpack:///./lib/users.service.js","webpack:///./lib/comments.service.js","webpack:///./lib/custom.service.js"],"names":[],"mappings":"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CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,wCAAuC,OAAO;AAC9C;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,cAAa;AACb;AACA,kCAAiC;AACjC;AACA;AACA;AACA,iCAAgC,EAAE;AAClC,iCAAgC,EAAE;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL,kCAAiC,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA,oBAAmB;AACnB;AACA;AACA,sDAAqD,+BAA+B;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA,kBAAiB;AACjB;AACA;AACA;AACA;AACA,+BAA8B;AAC9B;AACA,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CC1LkB,4BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBA0B7B,iBAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC3B,0GAA+B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACzD;;;;;;;;;;;;;;;;;;;gBAiBE,aAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC/B,+FAAoB,iBAAiB,EAAE;AACnC,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,wGAA2B,MAAM,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC/D;;;;;;;;;;;;;;;;;;;gBAiBU,qBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACvC,+FAAoB,yBAAyB,EAAE;AAC3C,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,4GAA+B,MAAM,YAAS,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACxE;;;;;;;;;;;;;;;;;;;;gBAkBM,iBAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC3C,+FAAoB,qBAAqB,EAAE;AACvC,uBAAM,EAAN,MAAM;AACN,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,wGAA2B,MAAM,cAAS,MAAM,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC9E;;;;;;;;;;;;;;;;;;;gBAiBc,yBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC3C,+FAAoB,6BAA6B,EAAE;AAC/C,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,4GAA+B,MAAM,iBAAc,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC7E;;;;;;;;;;;;;;;;;;;;gBAkBU,qBAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACnD,+FAAoB,yBAAyB,EAAE;AAC3C,uBAAM,EAAN,MAAM;AACN,2BAAU,EAAV,UAAU;cACb,EAAE;AACH,wGAA2B,MAAM,mBAAc,UAAU,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACvF;;;;;;;;;;;;;;;;;;;gBAiBc,yBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC3C,+FAAoB,6BAA6B,EAAE;AAC/C,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,4GAA+B,MAAM,sBAAmB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAClF;;;;;;;;;;;;;;;;;;;;gBAkBU,qBAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACnD,+FAAoB,yBAAyB,EAAE;AAC3C,uBAAM,EAAN,MAAM;AACN,2BAAU,EAAV,UAAU;cACb,EAAE;AACH,wGAA2B,MAAM,wBAAmB,UAAU,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC5F;;;;;;;;;;;;;;;;;;;gBAiBS,oBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACtC,+FAAoB,wBAAwB,EAAE;AAC1C,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,4GAA+B,MAAM,iBAAc,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC7E;;;;;;;;;;;;;;;;;;;gBAkBK,gBAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACzC,+FAAoB,oBAAoB,EAAE;AACtC,uBAAM,EAAN,MAAM;AACN,sBAAK,EAAL,KAAK;cACR,EAAE;AACH,wGAA2B,MAAM,mBAAc,KAAK,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAClF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CC1Oc,4BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBA0B7B,mBAAuC;iBAAtC,MAAM,yDAAG,EAAE;iBAAE,IAAI,yDAAG,EAAE;iBAAE,OAAO,yDAAG,EAAE;;AACxC,gGAAqB,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACzD;;;;;;;;;;;;;;;;;;;gBAmBE,aAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC/B,+FAAoB,iBAAiB,EAAE;AACnC,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,wGAA2B,MAAM,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC/D;;;;;;;;;;;;;;;;;;;gBAiBU,qBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACvC,+FAAoB,yBAAyB,EAAE;AAC3C,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,4GAA+B,MAAM,YAAS,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACxE;;;;;;;;;;;;;;;;;;;;gBAkBM,iBAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC3C,+FAAoB,qBAAqB,EAAE;AACvC,uBAAM,EAAN,MAAM;AACN,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,wGAA2B,MAAM,cAAS,MAAM,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC9E;;;;;;;;;;;;;;;;;;;gBAiBc,yBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC3C,+FAAoB,6BAA6B,EAAE;AAC/C,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,4GAA+B,MAAM,iBAAc,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC7E;;;;;;;;;;;;;;;;;;;;gBAkBU,qBAAC,MAAM,EAAE,UAAU,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACnD,+FAAoB,yBAAyB,EAAE;AAC3C,uBAAM,EAAN,MAAM;AACN,2BAAU,EAAV,UAAU;cACb,EAAE;AACH,wGAA2B,MAAM,mBAAc,UAAU,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACvF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CChJc,4BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBA0B7B,mBAAuC;iBAAtC,MAAM,yDAAG,EAAE;iBAAE,IAAI,yDAAG,EAAE;iBAAE,OAAO,yDAAG,EAAE;;AACxC,gGAAqB,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACzD;;;;;;;;;;;;;;;;;;;gBAmBE,aAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAChC,+FAAoB,iBAAiB,EAAE;AACnC,wBAAO,EAAP,OAAO;cACV,EAAE;AACH,wGAA2B,OAAO,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAChE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CCpDc,4BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAuB7B,mBAAuC;iBAAtC,MAAM,yDAAG,EAAE;iBAAE,IAAI,yDAAG,EAAE;iBAAE,OAAO,yDAAG,EAAE;;AACxC,gGAAqB,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACzD;;;;;;;;;;;;;;;;;;;gBAmBE,aAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACjC,+FAAoB,iBAAiB,EAAE;AACnC,yBAAQ,EAAR,QAAQ;cACX,EAAE;AACH,wGAA2B,QAAQ,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACjE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CCjDc,4BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAuB7B,mBAAuC;iBAAtC,MAAM,yDAAG,EAAE;iBAAE,IAAI,yDAAG,EAAE;iBAAE,OAAO,yDAAG,EAAE;;AACxC,gGAAqB,aAAa,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC9D;;;;;;;;;;;;;;;;;;;gBAmBE,aAAC,cAAc,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACvC,+FAAoB,sBAAsB,EAAE;AACxC,+BAAc,EAAd,cAAc;cACjB,EAAE;AACH,6GAAgC,cAAc,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC5E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CCjDc,4BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBA4BrB,yBAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACnC,mHAAwC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAClE;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAyBS,oBAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC9B,8GAAmC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC7D;;;;;;;;;;;;;;;;;;;gBAiBU,qBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACvC,+FAAoB,iBAAiB,EAAE;AACnC,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,iHAAoC,MAAM,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACxE;;;;;;;;;;;;;;;;;;;gBAiBK,gBAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAClC,+FAAoB,iBAAiB,EAAE;AACnC,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,4GAA+B,MAAM,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACnE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CCrGc,4BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBA4B7B,iBAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC3B,0GAA+B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACzD;;;;;;;;;;;;;;;;;;;gBAiBE,aAAC,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAC/B,+FAAoB,iBAAiB,EAAE;AACnC,uBAAM,EAAN,MAAM;cACT,EAAE;AACH,wGAA2B,MAAM,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC/D;;;;;;;;;;;;;;;;;;gBAgBC,YAAC,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AACtB,yGAA8B,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACxD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CCtEc,4BAAqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAqC7B,mBAAuC;iBAAtC,MAAM,yDAAG,EAAE;iBAAE,IAAI,yDAAG,EAAE;iBAAE,OAAO,yDAAG,EAAE;;AACxC,gGAAqB,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UAC5D;;;;;;;;;;;;;;;;;;;gBAmBE,aAAC,SAAS,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;AAClC,+FAAoB,oBAAoB,EAAE;AACtC,0BAAS,EAAT,SAAS;cACZ,EAAE;AACH,2GAA8B,SAAS,EAAI,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE;UACrE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4CC/Dc,4BAAqB;;;;;AAGzB,uBAAC,SAAS,EAAE;AACnB,mBAAU,CAAC;;;;AACX,aAAI,CAAC,SAAS,GAAG,SAAS,CAAC;MAC9B;;;;;;;;;;;;;;;;;;;;;;gBAmBU,YAAoB;iBAAnB,UAAU,aAAO;;AACR;AACb,uBAAM,IAAI,IAA0C;cACvD;AACD,cAA8C;UACjD;;;;;;;;AAGO;eAAN,MAAM;;AAE2B;AAC/B,mBAAU,CAAC;;AAHP;;AAKa;AACjB,aAAI,CAAC,UAAU,GAAG,UAAU,CAAC;MAChC;;kBAPC,MAAM;;gBASD,YAAuC;iBAAtC,MAAM,CAAK;iBAAE,IAAI,eAAK;iBAAE,OAAO,yDAAG,EAAE;;AACxC,+CAVF,MAAM,8CAU+D;AACtE;;;SAEoC;AACjC,oBAAwC;AACpC,yBAAQ,EAAR,QAAQ;cACX,EAAE;AACH,mCAA2E;UAC9E;;;SAlBO","file":"wp-api-angularjs.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5af69cbfd710aa925cb7\n **/","import Provider from './provider.js';\nimport Posts from './posts.service.js';\nimport Pages from './pages.service.js';\nimport Media from './media.service.js';\nimport Types from './types.service.js';\nimport Statuses from './statuses.service.js';\nimport Taxonomies from './taxonomies.service.js';\nimport Terms from './terms.service.js';\nimport Users from './users.service.js';\nimport Comments from './comments.service.js';\nimport Custom from './custom.service.js';\n\nlet mod = angular.module('wp-api-angularjs', []);\n\nmod.provider('WpApi', Provider);\nmod.service('$wpApiPosts', Posts);\nmod.service('$wpApiPages', Pages);\nmod.service('$wpApiMedia', Media);\nmod.service('$wpApiTypes', Types);\nmod.service('$wpApiStatuses', Statuses);\nmod.service('$wpApiTaxonomies', Taxonomies);\nmod.service('$wpApiTerms', Terms);\nmod.service('$wpApiUsers', Users);\nmod.service('$wpApiComments', Comments);\nmod.service('$wpApiCustom', Custom);\n\nexport default mod = mod.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/index.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiStatuses\n * @description\n * statuses entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiStatuses#getList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiStatuses\n     *\n     * @description\n     * Get statuses list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be serialized with the paramSerializer and appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers to send to the server. If the return value of a function is null, the header will not be sent. Functions accept a config object as an argument.\n     * @example\n     * <pre>\n     * $wpApiStatuses.getList({});\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getList(params = {}, data = {}, headers = {}) {\n        return super.getList('/statuses', params, data, headers);\n    }\n\n\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiStatuses#get\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiStatuses\n     *\n     * @description\n     * Get a specific statuses by its ID\n     *\n     * @param {string} statusesName  The statuses name\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    get(statusesName, params, data, headers) {\n        super.requiredInput('$wpApiStatuses:get', {\n            statusesName\n        });\n        return super.get(`/statuses/${statusesName}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/statuses.service.js\n **/","export default class {\n    constructor($injector) {\n        'ngInject';\n\n        this.baseUrl = $injector.get('WpApi').getBaseUrl();\n        this.defaultHttpProperties = $injector.get('WpApi').getDefaultHttpProperties();\n        this.$http = $injector.get('$http');\n\n    }\n\n    getList(suffix, params = {}, data = {}, headers = {}) {\n        return this.$http(angular.merge({}, this.defaultHttpProperties, {\n            method: 'GET',\n            url: this.baseUrl + suffix,\n            params,\n            data,\n            headers\n        }));\n    }\n\n    get(suffix, params = {}, data = {}, headers = {}) {\n        return this.$http(angular.merge({}, this.defaultHttpProperties, {\n            method: 'GET',\n            url: this.baseUrl + suffix,\n            params,\n            data,\n            headers\n        }));\n    }\n\n    requiredInput(functionName, inputs) {\n        angular.forEach(inputs, (value, name) => {\n            if (typeof value !== 'undefined') return;\n            throw new Error(`Parameter ${name} from function ${functionName} is required`);\n        });\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/parent.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.WpApi\n * @description\n * wp-api-angularjs service\n */\n/**\n * @ngdoc service\n * @name wp-api-angularjs.WpApiProvider\n * @description\n * wp-api-angularjs provider\n */\nimport jsBase64 from 'js-base64';\n\nexport default function($httpProvider) {\n    'ngInject';\n\n    let baseUrl,\n        authType = null,\n        httpProperties = {};\n\n    const namespace = '/wp/v2';\n\n    // Give access to total ans pages header by default\n    $httpProvider.interceptors.push(() => {\n        return {\n            response: (response) => {\n                response.wpApiHeaders = {\n                    total: response.headers('X-WP-Total'),\n                    pages: response.headers('X-WP-TotalPages')\n                }\n                return response;\n            }\n        }\n    });\n\n    return {\n        $get,\n        setBaseUrl,\n        setBasicCredentials,\n        // $http configuration\n        addInterceptor,\n        setDefaultHttpProperties\n    };\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.WpApiProvider#setBaseUrl\n     * @access public\n     * @methodOf wp-api-angularjs.WpApiProvider\n     *\n     * @description\n     * Set the webserver base url\n     * @param {string} newBaseUrl   the url to the webservice\n     */\n    function setBaseUrl(newBaseUrl) {\n        newBaseUrl = stripTrailingSlash(newBaseUrl);\n        baseUrl = newBaseUrl + namespace;\n        return this;\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.WpApiProvider#setBasicCredentials\n     * @access public\n     * @methodOf wp-api-angularjs.WpApiProvider\n     *\n     * @description\n     * Set the basic auth credentials during configuration. This is not recommended as it exposes credential out of the open.\n     * Please use WpApi.setBasicCredentials instead, with user input (this lib do not provides the form needed)\n     * @param {string} login    login\n     * @param {string} password password\n     */\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.WpApi#setBasicCredentials\n     * @access public\n     * @methodOf wp-api-angularjs.WpApi\n     *\n     * @description\n     * Set the basic auth credentials during runtime. Make sure your WP-API runs with an SSL certificate (https) otherwise this will expose your credentials at every request. Display a form for users to connect and use the following code to register credentials.\n     * @param {string} login    login\n     * @param {string} password password\n     */\n    function setBasicCredentials(login, password) {\n        let encodedCredentials = jsBase64.Base64.encode(`${login}:${password}`);\n        $httpProvider.defaults.headers.common['Authorization'] = 'Basic ' + encodedCredentials;\n        return this;\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.WpApiProvider#addInterceptor\n     * @access public\n     * @methodOf wp-api-angularjs.WpApiProvider\n     *\n     * @description\n     * Allow you to modify requests, responses or errors\n     * https://docs.angularjs.org/api/ng/service/$http#interceptors\n     * @example\n     * <pre>\n     * WpApiProvider.addInterceptor(() => {\n     *     return {\n     *         response: (response) => {\n     *             // DO something with the response here\n     *             return response;\n     *         }\n     *     }\n     * });\n     * </pre>\n     * @param {function} func   the interceptor definition\n     */\n    function addInterceptor(func) {\n        $httpProvider.interceptors.push(func);\n        return this;\n    }\n\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.WpApiProvider#setDefaultHttpProperties\n     * @access public\n     * @methodOf wp-api-angularjs.WpApiProvider\n     *\n     * @description\n     * Allow you to overwrite http defaults\n     * https://docs.angularjs.org/api/ng/service/$http#setting-http-headers\n     * @example\n     * <pre>\n     * WpApiProvider.setDefaultHttpProperties({\n     *     timeout: 20000\n     * });\n     * </pre>\n     * @param {object} properties   the properties to overwrite\n     */\n    function setDefaultHttpProperties(properties = {}) {\n        angular.merge(httpProperties, properties);\n        return this;\n    }\n\n    function $get($http) {\n        'ngInject';\n\n        return {\n            getBaseUrl,\n            setBasicCredentials,\n            getDefaultHttpProperties\n        };\n\n        /**\n         * @ngdoc function\n         * @name wp-api-angularjs.WpApi#getBaseUrl\n         * @access public\n         * @methodOf wp-api-angularjs.WpApi\n         *\n         * @description\n         * Get the webserver base url\n         */\n        function getBaseUrl() {\n            return baseUrl;\n        }\n\n        /**\n         * @ngdoc function\n         * @name wp-api-angularjs.WpApi#getDefaultHttpProperties\n         * @access public\n         * @methodOf wp-api-angularjs.WpApi\n         *\n         * @description\n         * Get the http properties to inejct in each http request\n         */\n        function getDefaultHttpProperties() {\n            return httpProperties;\n        }\n    }\n\n    function stripTrailingSlash(str) {\n        return str.replace(/\\/$/, \"\");\n    }\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/provider.js\n **/","/*\n * $Id: base64.js,v 2.15 2014/04/05 12:58:57 dankogai Exp dankogai $\n *\n *  Licensed under the MIT license.\n *    http://opensource.org/licenses/mit-license\n *\n *  References:\n *    http://en.wikipedia.org/wiki/Base64\n */\n\n(function(global) {\n    'use strict';\n    // existing version for noConflict()\n    var _Base64 = global.Base64;\n    var version = \"2.1.9\";\n    // if node.js, we use Buffer\n    var buffer;\n    if (typeof module !== 'undefined' && module.exports) {\n        try {\n            buffer = require('buffer').Buffer;\n        } catch (err) {}\n    }\n    // constants\n    var b64chars\n        = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n    var b64tab = function(bin) {\n        var t = {};\n        for (var i = 0, l = bin.length; i < l; i++) t[bin.charAt(i)] = i;\n        return t;\n    }(b64chars);\n    var fromCharCode = String.fromCharCode;\n    // encoder stuff\n    var cb_utob = function(c) {\n        if (c.length < 2) {\n            var cc = c.charCodeAt(0);\n            return cc < 0x80 ? c\n                : cc < 0x800 ? (fromCharCode(0xc0 | (cc >>> 6))\n                                + fromCharCode(0x80 | (cc & 0x3f)))\n                : (fromCharCode(0xe0 | ((cc >>> 12) & 0x0f))\n                   + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                   + fromCharCode(0x80 | ( cc         & 0x3f)));\n        } else {\n            var cc = 0x10000\n                + (c.charCodeAt(0) - 0xD800) * 0x400\n                + (c.charCodeAt(1) - 0xDC00);\n            return (fromCharCode(0xf0 | ((cc >>> 18) & 0x07))\n                    + fromCharCode(0x80 | ((cc >>> 12) & 0x3f))\n                    + fromCharCode(0x80 | ((cc >>>  6) & 0x3f))\n                    + fromCharCode(0x80 | ( cc         & 0x3f)));\n        }\n    };\n    var re_utob = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFFF]|[^\\x00-\\x7F]/g;\n    var utob = function(u) {\n        return u.replace(re_utob, cb_utob);\n    };\n    var cb_encode = function(ccc) {\n        var padlen = [0, 2, 1][ccc.length % 3],\n        ord = ccc.charCodeAt(0) << 16\n            | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)\n            | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0)),\n        chars = [\n            b64chars.charAt( ord >>> 18),\n            b64chars.charAt((ord >>> 12) & 63),\n            padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),\n            padlen >= 1 ? '=' : b64chars.charAt(ord & 63)\n        ];\n        return chars.join('');\n    };\n    var btoa = global.btoa ? function(b) {\n        return global.btoa(b);\n    } : function(b) {\n        return b.replace(/[\\s\\S]{1,3}/g, cb_encode);\n    };\n    var _encode = buffer ? function (u) {\n        return (u.constructor === buffer.constructor ? u : new buffer(u))\n        .toString('base64')\n    }\n    : function (u) { return btoa(utob(u)) }\n    ;\n    var encode = function(u, urisafe) {\n        return !urisafe\n            ? _encode(String(u))\n            : _encode(String(u)).replace(/[+\\/]/g, function(m0) {\n                return m0 == '+' ? '-' : '_';\n            }).replace(/=/g, '');\n    };\n    var encodeURI = function(u) { return encode(u, true) };\n    // decoder stuff\n    var re_btou = new RegExp([\n        '[\\xC0-\\xDF][\\x80-\\xBF]',\n        '[\\xE0-\\xEF][\\x80-\\xBF]{2}',\n        '[\\xF0-\\xF7][\\x80-\\xBF]{3}'\n    ].join('|'), 'g');\n    var cb_btou = function(cccc) {\n        switch(cccc.length) {\n        case 4:\n            var cp = ((0x07 & cccc.charCodeAt(0)) << 18)\n                |    ((0x3f & cccc.charCodeAt(1)) << 12)\n                |    ((0x3f & cccc.charCodeAt(2)) <<  6)\n                |     (0x3f & cccc.charCodeAt(3)),\n            offset = cp - 0x10000;\n            return (fromCharCode((offset  >>> 10) + 0xD800)\n                    + fromCharCode((offset & 0x3FF) + 0xDC00));\n        case 3:\n            return fromCharCode(\n                ((0x0f & cccc.charCodeAt(0)) << 12)\n                    | ((0x3f & cccc.charCodeAt(1)) << 6)\n                    |  (0x3f & cccc.charCodeAt(2))\n            );\n        default:\n            return  fromCharCode(\n                ((0x1f & cccc.charCodeAt(0)) << 6)\n                    |  (0x3f & cccc.charCodeAt(1))\n            );\n        }\n    };\n    var btou = function(b) {\n        return b.replace(re_btou, cb_btou);\n    };\n    var cb_decode = function(cccc) {\n        var len = cccc.length,\n        padlen = len % 4,\n        n = (len > 0 ? b64tab[cccc.charAt(0)] << 18 : 0)\n            | (len > 1 ? b64tab[cccc.charAt(1)] << 12 : 0)\n            | (len > 2 ? b64tab[cccc.charAt(2)] <<  6 : 0)\n            | (len > 3 ? b64tab[cccc.charAt(3)]       : 0),\n        chars = [\n            fromCharCode( n >>> 16),\n            fromCharCode((n >>>  8) & 0xff),\n            fromCharCode( n         & 0xff)\n        ];\n        chars.length -= [0, 0, 2, 1][padlen];\n        return chars.join('');\n    };\n    var atob = global.atob ? function(a) {\n        return global.atob(a);\n    } : function(a){\n        return a.replace(/[\\s\\S]{1,4}/g, cb_decode);\n    };\n    var _decode = buffer ? function(a) {\n        return (a.constructor === buffer.constructor\n                ? a : new buffer(a, 'base64')).toString();\n    }\n    : function(a) { return btou(atob(a)) };\n    var decode = function(a){\n        return _decode(\n            String(a).replace(/[-_]/g, function(m0) { return m0 == '-' ? '+' : '/' })\n                .replace(/[^A-Za-z0-9\\+\\/]/g, '')\n        );\n    };\n    var noConflict = function() {\n        var Base64 = global.Base64;\n        global.Base64 = _Base64;\n        return Base64;\n    };\n    // export Base64\n    global.Base64 = {\n        VERSION: version,\n        atob: atob,\n        btoa: btoa,\n        fromBase64: decode,\n        toBase64: encode,\n        utob: utob,\n        encode: encode,\n        encodeURI: encodeURI,\n        btou: btou,\n        decode: decode,\n        noConflict: noConflict\n    };\n    // if ES5 is available, make Base64.extendString() available\n    if (typeof Object.defineProperty === 'function') {\n        var noEnum = function(v){\n            return {value:v,enumerable:false,writable:true,configurable:true};\n        };\n        global.Base64.extendString = function () {\n            Object.defineProperty(\n                String.prototype, 'fromBase64', noEnum(function () {\n                    return decode(this)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64', noEnum(function (urisafe) {\n                    return encode(this, urisafe)\n                }));\n            Object.defineProperty(\n                String.prototype, 'toBase64URI', noEnum(function () {\n                    return encode(this, true)\n                }));\n        };\n    }\n    // that's it!\n    if (global['Meteor']) {\n       Base64 = global.Base64; // for normal export in Meteor.js\n    }\n})(this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/js-base64/base64.js\n ** module id = 4\n ** module chunks = 0\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiPosts\n * @description\n * Posts entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * Get post list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @example\n     * <pre>\n     * $wpApiPosts.getList({\n     *  page: 1,\n     *  per_page: 10,\n     *  \"filter[orderby]\": \"date\"\n     *  \"filter[orderby]\": \"asc\"\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getList(params, data, headers) {\n        return super.getList(`/posts`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#get\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * Get a specific post by its ID\n     *\n     * @param {int} postId  The post id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    get(postId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:get', {\n            postId\n        });\n        return super.get(`/posts/${postId}`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getMetaList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * [REQUIRES AUTH] Get a specific post metas\n     *\n     * @param {int} postId  The post id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getMetaList(postId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:getMetaList', {\n            postId\n        });\n        return super.getList(`/posts/${postId}/meta`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getMeta\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * [REQUIRES AUTH] Get a specific post meta by its ID\n     *\n     * @param {int} postId  The post id\n     * @param {int} metaId  The meta id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getMeta(postId, metaId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:getMeta', {\n            postId,\n            metaId\n        });\n        return super.get(`/posts/${postId}/meta/${metaId}`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getRevisionList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * [REQUIRES AUTH] Get a specific post revisions\n     *\n     * @param {int} postId  The post id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getRevisionList(postId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:getRevisionList', {\n            postId\n        });\n        return super.getList(`/posts/${postId}/revisions`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getRevision\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * [REQUIRES AUTH] Get a specific post revision its ID\n     *\n     * @param {int} postId  The post id\n     * @param {int} getRevision  The revision id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getRevision(postId, revisionId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:getRevision', {\n            postId,\n            revisionId\n        });\n        return super.get(`/posts/${postId}/revisions/${revisionId}`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getCategoryList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * Get a specific post category list\n     *\n     * @param {int} postId  The post id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getCategoryList(postId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:getCategoryList', {\n            postId\n        });\n        return super.getList(`/posts/${postId}/terms/category`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getCategory\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * Get a specific post category its ID\n     *\n     * @param {int} postId  The post id\n     * @param {int} categoryId  The category id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getCategory(postId, categoryId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:getCategory', {\n            postId,\n            categoryId\n        });\n        return super.get(`/posts/${postId}/terms/category/${categoryId}`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getTagList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * Get a specific post tag list\n     *\n     * @param {int} postId  The post id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getTagList(postId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:getTagList', {\n            postId\n        });\n        return super.getList(`/posts/${postId}/terms/tag`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPosts#getTag\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPosts\n     *\n     * @description\n     * Get a specific post tag its ID\n\n     * @param {int} postId  The post id\n     * @param {int} tagId  The tag id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getTag(postId, tagId, params, data, headers) {\n        super.requiredInput('$wpApiPosts:getTag', {\n            postId,\n            tagId\n        });\n        return super.get(`/posts/${postId}/terms/tag/${tagId}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/posts.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiPages\n * @description\n * Pages entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPages#getList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPages\n     *\n     * @description\n     * Get page list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be serialized with the paramSerializer and appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers to send to the server. If the return value of a function is null, the header will not be sent. Functions accept a config object as an argument.\n     * @example\n     * <pre>\n     * $wpApiPages.getList({\n     *  page: 1,\n     *  per_page: 10,\n     *  \"filter[orderby]\": \"date\"\n     *  \"filter[orderby]\": \"asc\"\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getList(params = {}, data = {}, headers = {}) {\n        return super.getList('/pages', params, data, headers);\n    }\n\n\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPages#get\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPages\n     *\n     * @description\n     * Get a specific page by its ID\n     *\n     * @param {int} pageId  The page id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    get(pageId, params, data, headers) {\n        super.requiredInput('$wpApiPages:get', {\n            pageId\n        });\n        return super.get(`/pages/${pageId}`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPages#getMetaList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPages\n     *\n     * @description\n     * [REQUIRES AUTH] Get a specific page metas\n     *\n     * @param {int} pageId  The page id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getMetaList(pageId, params, data, headers) {\n        super.requiredInput('$wpApiPages:getMetaList', {\n            pageId\n        });\n        return super.getList(`/pages/${pageId}/meta`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPages#getMeta\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPages\n     *\n     * @description\n     * [REQUIRES AUTH] Get a specific page meta by its ID\n     *\n     * @param {int} pageId  The page id\n     * @param {int} metaId  The meta id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getMeta(pageId, metaId, params, data, headers) {\n        super.requiredInput('$wpApiPages:getMeta', {\n            pageId,\n            metaId\n        });\n        return super.get(`/pages/${pageId}/meta/${metaId}`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPages#getRevisionList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPages\n     *\n     * @description\n     * [REQUIRES AUTH] Get a specific page revisions\n     *\n     * @param {int} pageId  The page id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getRevisionList(pageId, params, data, headers) {\n        super.requiredInput('$wpApiPages:getRevisionList', {\n            pageId\n        });\n        return super.getList(`/pages/${pageId}/revisions`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiPages#getRevision\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiPages\n     *\n     * @description\n     * [REQUIRES AUTH] Get a specific page revision its ID\n     *\n     * @param {int} pageId  The page id\n     * @param {int} getRevision  The revision id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getRevision(pageId, revisionId, params, data, headers) {\n        super.requiredInput('$wpApiPages:getRevision', {\n            pageId,\n            revisionId\n        });\n        return super.get(`/pages/${pageId}/revisions/${revisionId}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/pages.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiMedia\n * @description\n * media entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiMedia#getList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiMedia\n     *\n     * @description\n     * Get media list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be serialized with the paramSerializer and appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers to send to the server. If the return value of a function is null, the header will not be sent. Functions accept a config object as an argument.\n     * @example\n     * <pre>\n     * $wpApiMedia.getList({\n     *  page: 1,\n     *  per_page: 10,\n     *  \"filter[orderby]\": \"date\"\n     *  \"filter[orderby]\": \"asc\"\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getList(params = {}, data = {}, headers = {}) {\n        return super.getList('/media', params, data, headers);\n    }\n\n\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiMedia#get\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiMedia\n     *\n     * @description\n     * Get a specific media by its ID\n     *\n     * @param {int} mediaId  The media id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    get(mediaId, params, data, headers) {\n        super.requiredInput('$wpApiMedia:get', {\n            mediaId\n        });\n        return super.get(`/media/${mediaId}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/media.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiTypes\n * @description\n * postType entity post|page|attachment\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiTypes#getList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiTypes\n     *\n     * @description\n     * Get type list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be serialized with the paramSerializer and appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers to send to the server. If the return value of a function is null, the header will not be sent. Functions accept a config object as an argument.\n     * @example\n     * <pre>\n     * $wpApiTypes.getList({\n     *  post_type: \"attachment\"\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getList(params = {}, data = {}, headers = {}) {\n        return super.getList('/types', params, data, headers);\n    }\n\n\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiTypes#get\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiTypes\n     *\n     * @description\n     * Get a specific postType\n     *\n     * @param {string} postType  (post|page|attachment)\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    get(postType, params, data, headers) {\n        super.requiredInput('$wpApiTypes:get', {\n            postType\n        });\n        return super.get(`/types/${postType}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/types.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiTaxonomies\n * @description\n * taxonomies entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiTaxonomies#getList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiTaxonomies\n     *\n     * @description\n     * Get taxonomies list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be serialized with the paramSerializer and appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers to send to the server. If the return value of a function is null, the header will not be sent. Functions accept a config object as an argument.\n     * @example\n     * <pre>\n     * $wpApiTaxonomies.getList({\n     *  post_type: \"attachment\"\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getList(params = {}, data = {}, headers = {}) {\n        return super.getList('/taxonomies', params, data, headers);\n    }\n\n\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiTaxonomies#get\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiTaxonomies\n     *\n     * @description\n     * Get a specific taxonomies by taxonomiesType (category|post_tag)\n     *\n     * @param {string} taxonomiesType  (category|post_tag)\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    get(taxonomiesType, params, data, headers) {\n        super.requiredInput('$wpApiTaxonomies:get', {\n            taxonomiesType\n        });\n        return super.get(`/taxonomies/${taxonomiesType}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/taxonomies.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiTerms\n * @description\n * Posts entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiTerms#getCategoryList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiTerms\n     *\n     * @description\n     * Get category list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @example\n     * <pre>\n     * $wpApiTerms.getCategoryList({\n     *  page: 1,\n     *  per_page: 10,\n     *  search: '',\n     *  order: '',\n     *  orderby: '',\n     *  parent: '',\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getCategoryList(params, data, headers) {\n        return super.getList(`/terms/category`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiTerms#getTagList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiTerms\n     *\n     * @description\n     * Get category list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @example\n     * <pre>\n     * $wpApiTerms.getTagList({\n     *  page: 1,\n     *  per_page: 10,\n     *  search: '',\n     *  order: '',\n     *  orderby: ''\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getTagList(params, data, headers) {\n        return super.getList(`/terms/tag`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiTerms#getCategory\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiTerms\n     *\n     * @description\n     * Get a specific category by its ID\n     *\n     * @param {int} termId  The term id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getCategory(termId, params, data, headers) {\n        super.requiredInput('$wpApiTerms:get', {\n            termId\n        });\n        return super.get(`/terms/category/${termId}`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiTerms#getTag\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiTerms\n     *\n     * @description\n     * Get a specific tag by its ID\n     *\n     * @param {int} termId  The term id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    getTag(termId, params, data, headers) {\n        super.requiredInput('$wpApiTerms:get', {\n            termId\n        });\n        return super.get(`/terms/tag/${termId}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/terms.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiUsers\n * @description\n * Users entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiUsers#getList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiUsers\n     *\n     * @description\n     * Get users list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @example\n     * <pre>\n     * $wpApiUsers.getList({\n     *  page: 1,\n     *  per_page: 10,\n     *  search: '',\n     *  order: '',\n     *  orderby: '',\n     *  context: ''\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getList(params, data, headers) {\n        return super.getList(`/users`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiUsers#get\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiUsers\n     *\n     * @description\n     * Get a specific user by its ID\n     *\n     * @param {int} userId  The users id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    get(userId, params, data, headers) {\n        super.requiredInput('$wpApiUsers:get', {\n            userId\n        });\n        return super.get(`/users/${userId}`, params, data, headers);\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiUsers#me\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiUsers\n     *\n     * @description\n     * [REQUIRES AUTH] Get your user object\n     *\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    me(params, data, headers) {\n        return super.get(`/users/me`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/users.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiComments\n * @description\n * Comments entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class extends Parent {\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiComments#getList\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiComments\n     *\n     * @description\n     * Get comment list\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be serialized with the paramSerializer and appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers to send to the server. If the return value of a function is null, the header will not be sent. Functions accept a config object as an argument.\n     * @example\n     * <pre>\n     * $wpApiComments.getList({\n     *  page: 1,\n     *  per_page: 10,\n     *  search: '',\n     *  author_email: '',\n     *  karma: '',\n     *  parent: 9,\n     *  post: 5,\n     *  post_author: '',\n     *  post_slug: '',\n     *  post_parent: '',\n     *  post_status: '',\n     *  post_type: 'page',\n     *  status: 'approve',\n     *  type: 'comment',\n     *  user: 9\n     * });\n     * </pre>\n     * @returns {Object} Promise\n     */\n    getList(params = {}, data = {}, headers = {}) {\n        return super.getList('/comments', params, data, headers);\n    }\n\n\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiComments#get\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiComments\n     *\n     * @description\n     * Get a specific comment by its ID\n     *\n     * @param {int} commentId  The comment id\n     * @param {object} params  Optional: {Object.<string|Object>} – Map of strings or objects which will be appended as GET parameters.\n     * @param {object} data  Optional: {string|Object} – Data to be sent as the request message data.\n     * @param {object} headers  Optional: {Object} – Map of strings or functions which return strings representing HTTP headers\n     * @returns {Object} Promise\n     */\n    get(commentId, params, data, headers) {\n        super.requiredInput('$wpApiComments:get', {\n            commentId\n        });\n        return super.get(`/comments/${commentId}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/comments.service.js\n **/","/**\n * @ngdoc service\n * @name wp-api-angularjs.$wpApiCustom\n * @description\n * Custom entity\n * @requires  $injector\n */\nimport Parent from './parent.service.js';\n\nexport default class {\n    constructor($injector) {\n        'ngInject';\n        this.$injector = $injector;\n    }\n\n    /**\n     * @ngdoc function\n     * @name wp-api-angularjs.$wpApiCustom#getInstance\n     * @access public\n     * @methodOf wp-api-angularjs.$wpApiCustom\n     *\n     * @description\n     * Get page list\n     * @param {string} entityName   The name of the entity to fetch\n     * @example\n     * <pre>\n     * var cars = $wpApiCustom.getInstance('cars');\n     * cars.getList();\n     * cars.get(666);\n     * </pre>\n     * @returns {Object} Entity instance. You can use get and getList methods the same way as other entities\n     */\n    getInstance(entityName = null) {\n        if (!entityName) {\n            throw new Error(`getInstance needs an entity name`);\n        }\n        return new Custom(this.$injector, entityName);\n    }\n}\n\nclass Custom extends Parent {\n\n    constructor($injector, entityName) {\n        'ngInject';\n\n        super($injector);\n        this.entityName = entityName;\n    }\n\n    getList(params = {}, data = {}, headers = {}) {\n        return super.getList(`/${this.entityName}`, params, data, headers);\n    }\n\n    get(customId, params, data, headers) {\n        super.requiredInput('$wpApiCustom:get', {\n            customId\n        });\n        return super.get(`/${this.entityName}/${customId}`, params, data, headers);\n    }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./lib/custom.service.js\n **/"],"sourceRoot":""}